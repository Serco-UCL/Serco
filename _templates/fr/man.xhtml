<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE html
   PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
   "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd" >

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title></title>
    <style type="text/css" xml:space="preserve">@media print {#ghostery-purple-box {display:none !important}}</style>
    <style type="text/css" xml:space="preserve">
        pre {
    /*display: inline-block;*/
    padding: 5px ;
    width: 300px;
    /*margin-right: 20%;*/
    background: none repeat scroll 0 0 #f9f9f9;
    border: 1px solid #EEE;
    }
    
    h1, h2, h3, h4, h5, h6 {
    margin-top: 30px;
    font-weight: 300;
    color: #4653b4;
}
    body {
    padding-right: 20px;
    padding-left: 20px;
}
    .param{
        font-weight: bold;
        margin: 0;
        color: #369;
    }
    </style>
  
  </head>
  <body>
    <h2>
      Description
    </h2>
      <p>
          <H4>Quel est l'objectif du projet Serco ?</H4>
          Offrir un moyen simple et adapté à la réalisation d'exercice d'apprentissage, d'effectuer des recherches dans des "collections" "librement accessibles", "structurées", "textuelles", "relativement grandes", "stables" et "adaptées à l'apprentissage"
          <ul>      
              <li> "collections" : Une collection est une liste d'éléments de même type, de la même famille.</li>
              <li>"librement accessible" : Le contenu d'une collection doit être intégralement libre d'accès, d'utilisation et de diffusion. Aucune donnée privée ou protégée par une quelconque limitation de droit à la diffusion ne peut être mise à la disposition des utilisateurs par ce service qui se veut "Open".</li>
              <li>"structurées" :  Chaque élément d'une collection est composé de la même liste de champs que tous les éléments de la collection. (Exemple type : un tableau de donnée. Ou chaque ligne représente un élément et chaque colonne un champ)</li>
              <li>"textuelles" : Le contenu de chaque champ est composé de texte simple et traité comme tel. Les champs peuvent contenir toute forme de chaîne de caractères, pouvant représenter du texte, des chiffres, date ou autre. Mais les recherches ne sont effectuées que sur base du contenu textuel du champ.</li>
              <li>"relativement grandes" : L'outil est prévu pour mettre à disposition des collections allant typiquement de quelques centaines d'éléments à plusieurs milliers,</li>
              <li>"stables" : Les collections mises à disposition au travers Serco doivent être peu évolutives. Elles doivent être suffisamment stable et ne demander que de rares mises à jour, voire idéalement aucune.</li>
              <li>"adaptée à l'apprentissage" : Une collection doit pouvoir être dérivée en "sous-ensembles" de même structure, et au contenu adapté aux différents niveaux d'étude des apprenants</li>
          </ul>
          Exemple type de collection : la classification  ICD10 (Classification Internationnales des maladies) qui, dans Serco, peut être dérivée en une série de "sous-ensembles" de même structure, adaptés aux différents niveaux d'étude des apprenants
      </p>
      <p>
          <H4>Comment réalisons-nous cet objectif ?</H4>
          Principalement par l'implémentation d'un service REST gérant toutes les interactions nécessaires avec Serco et pouvant être implémenté dans tout système nécessitant d'intéragir avec le service.
          Actuellement deux implémentations sont librement disponibles :
          <ul>      
              <li>Une interface web</li>
              <li>Un plug-in de type "questionType" pour Moodle</li>
          </ul>
      </p>
    <h2>
      Liste des commandes REST
    </h2>
      <ul>      
      <li>
          <p class="param">info</p> 
          Si ce paramètre est utilisé, la requête retournera la liste des Collections utilisables <br /><br />
      </li>
        
      <li>
       <p class="param"> doc : </p>Si ce paramètre est utilisé, la requête retournera la documentation de l'outil.<br /><br />
      </li>
      <li>
        <p class="param">related : {collectionType:collection?}</p>
        Type de collection et collection sur lesquelles baser la recherche. Si aucune collection spécifiée, celle par défaut est utilisée.<br /><br />
      </li>
      <li>
        <p class="param">query : varchar()</p>
        Chaine de caractère qui va être recherchée dans la collection<br /><br />
        
      </li>
      <li>
        <p class="param">offset : int()</p>
        La position à laquelle la requête va débuter<br /><br />
      </li>
      <li>
        <p class="param">limit : int()</p>
        Nombre de résultats retournés<br /><br />
      </li>
      <li>
        <p class="param">order : ASC | DESC </p>
        Classer par ordre ascendant ou descendant<br /><br />
      </li>
      <li>
        <p class="param">format : xml | json | html </p>
        Format de la réponse<br /><br />
      </li>
      <li>
        <p class="param">lang : fr | en </p>
        Langue de l'outil<br /><br />
      </li>
    </ul>

    <h2>
      Valeurs de retour
    </h2>
      
    <h4>ResponseHeader</h4>
    <pre>array responseHeader {
      Param[] params;
      int status;
      string error;
      float QTime;
    }
    </pre>
      
    <h4>Response</h4>
    <pre>array response {
      int total;
      int nbFound;
      Collection_Type[] docs;
    }
    </pre>
        
    <h4>Collection_Type</h4>
    <pre>array Collection_Type {
      string ref;
      string name;
      string description;
      int defaultColl;
      Collection[] collections;
      Fields[] fields;
    }
    </pre>
        
    <h4>Collection</h4>
    <pre>array Collection {
      string ref;
      string name;
      string description;
      dateTime last_update;
    }
    </pre>
        
    <h4>Field</h4>
    <pre>array field {
      string libelle;
      string description;
      int priority;
      boolean searchable;
    }
    </pre>
  </body>
</html>